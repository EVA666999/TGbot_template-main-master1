version: '3.1'

volumes:
  pg_project:

services:
  pg_db:
    image: postgres:latest
    restart: always
    container_name: tg_bot_template_postgres
    hostname: ${POSTGRES_HOST}
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_project:/var/lib/postgresql/tg_bot_template
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis_fsm:
    image: redis:latest
    hostname: ${FSM_REDIS_HOST:-localhost}
    command: ${FSM_REDIS_PASS:+redis-server --requirepass ${FSM_REDIS_PASS}}
    env_file:
      - .env
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  tg_bot:
    container_name: tg_bot_template
    build: .
    env_file:
      - .env
    restart: always
    depends_on:
      pg_db:
        condition: service_healthy
      redis_fsm:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=pg_db
      - FSM_REDIS_HOST=redis_fsm